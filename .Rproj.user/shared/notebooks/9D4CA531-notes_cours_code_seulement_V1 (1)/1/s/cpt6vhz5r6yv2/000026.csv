"0",""
"0","# Par défaut, ""predict"" retourne les estimations des probabilités de chaque classe"
"0","predtreeprunedchurn=predict(treeprunedchurn,newdata=churntest)"
"0","predtreeprunedchurn[1:10,]"
"1","    "
"1","         0"
"1","          1"
"1","
5930"
"1"," 0.9598131"
"1"," 0.04018692"
"1","
3525"
"1"," 0.9598131"
"1"," 0.04018692"
"1","
496 "
"1"," 0.9598131"
"1"," 0.04018692"
"1","
641 "
"1"," 0.8041237"
"1"," 0.19587629"
"1","
4523"
"1"," 0.6268657"
"1"," 0.37313433"
"1","
3666"
"1"," 0.9598131"
"1"," 0.04018692"
"1","
5024"
"1"," 0.8019802"
"1"," 0.19801980"
"1","
1343"
"1"," 0.2815534"
"1"," 0.71844660"
"1","
7019"
"1"," 0.9598131"
"1"," 0.04018692"
"1","
6193"
"1"," 0.8815789"
"1"," 0.11842105"
"1","
"
"0","# Avec l'argument, ""type=class"", on obtient directement la classe prédite, celle avec "
"0","# la probabilité la plus élévée. Ceci revient à utiliser un point de coupure"
"0","#  de 0,5 pour un réponse binaire comme ici."
"0","predict(treeprunedchurn,newdata=churntest,type=""class"")[1:10]"
"1","5930 "
"1","3525 "
"1"," 496 "
"1"," 641 "
"1","4523 "
"1","3666 "
"1","5024 "
"1","1343 "
"1","7019 "
"1","6193 "
"1","
"
"1","   0 "
"1","   0 "
"1","   0 "
"1","   0 "
"1","   0 "
"1","   0 "
"1","   0 "
"1","   1 "
"1","   0 "
"1","   0 "
"1","
"
"1",""
"1","Levels: "
"1",""
"1","0 1"
"1",""
"1","
"
"0","# Boxplot des probabilités estimées par le modèle selon la vraie valeur de Y."
"0","boxplot(predtreeprunedchurn[,2]~churntest$Churn.Value, xlab=""Vraie valeur"", ylab=""Probabilité estimée"")"
