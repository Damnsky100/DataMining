"0","#Lastly, we can analyze the final model produced by the optimal lambda value"
"0","#find coefficients of best model"
"0","lasso_reg = glmnet(x, ytrain, alpha =1, lambda = lambda_best)"
"0","coef(lasso_reg)"
"1","17 x 1 sparse Matrix of class ""dgCMatrix""
"
"1","             "
"1","           s0"
"1","
(Intercept)  "
"1","  1.353654302"
"1","
numsessions  "
"1","  0.007536965"
"1","
numdays      "
"1"," -0.003081430"
"1","
numpurchases "
"1","  0.107210698"
"1","
totpurchases "
"1"," -0.001107124"
"1","
totplaytime  "
"1","  .          "
"1","
totscore     "
"1","  0.006270215"
"1","
numlives     "
"1","  0.001556798"
"1","
numelements  "
"1","  0.008925463"
"1","
difflevel    "
"1","  .          "
"1","
skill1       "
"1","  0.074554156"
"1","
skill2       "
"1"," -0.034533474"
"1","
country      "
"1","  0.002314697"
"1","
opsys        "
"1","  0.041895034"
"1","
acquis       "
"1"," -0.032068663"
"1","
trendsession "
"1","  .          "
"1","
trendpurchase"
"1"," -0.052632317"
"1","
"
"0","# We want to predic on our test data"
"0","x_test = data.matrix(datest[,1:16])"
"0","predic_lasso = predict(lasso_reg, s = lambda_best, newx = x_test)"
"0","summary(predic_lasso)"
"1",""
"1","       s1       "
"1","
"
"1"," Min.   :2.033  "
"1","
"
"1"," 1st Qu.:2.367  "
"1","
"
"1"," Median :2.488  "
"1","
"
"1"," Mean   :2.499  "
"1","
"
"1"," 3rd Qu.:2.616  "
"1","
"
"1"," Max.   :3.294  "
"1","
"
